package com.virtusa.isq.vtaf.runtime.pages;

/**
 *  Class PG_NewDealPage implements corresponding UI page
 *  UI objects in the page are stored in the class.
 */

public enum PG_NewDealPage {

        ele_ddDealTypeDropDownIdBtn("//span[@aria-controls='dealTypeId_listbox']"), lnk_DealType_Select("//ul[@unselectable='on' and contains(@id,'dealTypeId_listbox')]//li[contains(.,'<FormatSelect>')]"), tf_DealName("//input[@id='dealNameId']"), ele_ddCompanyName_Select("//ul[@unselectable='on' and contains(@id,'companyNameId_listbox')]//li[contains(text(),'<CompanyName>')]"), ele_ddChannel_Select("//ul[@unselectable='on' and contains(@id,'channelComboBoxId_listbox')]//li[contains(text(),'<ChannelName>')]"), ele_ddChannel_Select_CPOD("//ul[@unselectable='on' and contains(@id,'channelMultiSelectId_listbox')]//li[contains(text(),'<ChannelName>')]"), ele_ddDealLanguage("//ul[@unselectable='on' and contains(@id,'dealsLanguageId_listbox')]//li[contains(text(),'<DealLanguage>')]"), ele_ddJaguarWorkflowStatus("//ul[@unselectable='on' and contains(@id,'jaguarWorkflowStatusId_listbox')]//li[contains(text(),'<JaguarWorkflowStatus>')]"), ele_ddLanguagelBuyBack("//ul[@unselectable='on' and contains(@id,'languageBuyBackId_listbox')]//li[contains(text(),'<LanguageBuyBack>')]"), ele_ddDeliveryMethod("//ul[@unselectable='on' and contains(@id,'deliveryMethodId_listbox')]//li[contains(text(),'<DeliveryMethod>')]"), ele_ddDeliveryFormat("//ul[@unselectable='on' and contains(@id,'deliveryFormatId_listbox')]//li[contains(text(),'<DeliveryFormat>')]"), ele_lblSalesTeamLabel("//ul[@unselectable='on' and contains(@id,'salesTeamId_listbox')]"), ele_ddSalesTeam("//ul[@unselectable='on' and contains(@id,'salesTeamId_listbox')]//li[contains(text(),'<SalesTeam>')]"), ele_ddSalesPerson("//ul[@unselectable='on' and contains(@id,'salesPersonId_listbox')]//li[contains(text(),'<SalesPerson>')]"), ele_ddPrimaryTerritory_DigitalSalesOutputDeals("//ul[@unselectable='on' and contains(@id,'primarySalesTerritoryId_listbox')]//li[contains(text(),'<PrimaryTerritory>')]"), ele_ddPrimaryTerritory_CPODDeals("//ul[@unselectable='on' and contains(@id,'primaryFeedTerritoryId_listbox')]//li[contains(text(),'<PrimaryTerritory>')]"), lnk_Attorneyclick("//span[@unselectable='on' and contains(@aria-controls,'attorneyId_listbox')]"), ele_ddAttorney("//ul[@unselectable='on' and contains(@id,'attorneyId_listbox')]//li[contains(text(),'<Attorney>')]"), ele_ddRPShippingAddress("//ul[@unselectable='on' and contains(@id,'responsiblePartyForShippingExpensesId_listbox')]//li[contains(text(),'<RPShippingAddress>')]"), ele_ddRPMaterialExpenses("//ul[@unselectable='on' and contains(@id,'responsiblePartyForMaterialExpensesId_listbox')]//li[contains(text(),'<RPMaterialExpenses>')]"), tf_MaterialCostPerHour("//input[@id='costPerHourId']"), tf_TotalHours("//input[@id='totalHoursId']"), tf_LicensePeriod("//input[@id='licensePeriodFirstId']"), ele_ddLicensePeriod_CPODDeal("//input[@id='licensePeriodSecondId']"), ele_ddLic_Name("//ul[@unselectable='on' and contains(@id,'licenseNameId_listbox')]//li[contains(text(),'<LicenseeName>')]"), tf_Production_Company("//input[@id='productionCompanyId']"), ele_ddBroadcastChannel("//ul[@unselectable='on' and contains(@id,'braodcastChannelId_listbox')]//li[contains(text(),'<BroadcastChannel>')]"), ele_ddOriginal_Format_Name("//ul[@unselectable='on' and contains(@id,'originalFormatId_listbox')]//li[contains(text(),'<OriginalFormat>')]"), ele_ddPrimary_Territory_Format("//ul[@unselectable='on' and contains(@id,'primaryFeedTerritoryId1_listbox')]//li[contains(text(),'<PrimaryTerritory>')]"), ele_ddDeal_Language_Format("//ul[@unselectable='on' and contains(@id,'dealsLanguageId1_listbox')]//li[contains(text(),'<DealLanguage>')]"), ele_ddAttorney_Format("//ul[@unselectable='on' and contains(@id,'attorneyId1_listbox')]//li[contains(text(),'<attorney>')]"), ele_ddSales_Person_Format("//ul[@unselectable='on' and contains(@id,'salesTeamId1_listbox')]//li[contains(text(),'<SalesPerson>')]"), tf_License_Period_Format("//input[@id='LicensePeriodMonthsId1']"), tf_Lic_Period_Start_Date_Format("//input[@id='LicensePeriodStartDateId1']"), tf_Production_Start_Dead_Format("//input[@id='ProductionStartDeadlineId']"), tf_Broadcast_By_Date_Format("//input[@id='BroadcastByDateId']"), ele_ddCommitmentType("//ul[@unselectable='on' and contains(@id,'commitmentTypeFirstId_listbox')]//li[contains(text(),'<CommitmentType>')]"), tf_NoOfTermYears("//input[@id='noOfTermYearsFirstId']"), tf_NoOfTerms_CPOD("//input[@id='noOfTermYearsSecondId']"), tf_MinimumCommitValue("//input[@id='minCommitmentValueFirstId']"), tf_MinimumCommitmentValue_CPOD("//input[@id='minCommitmentValueSecondId']"), tf_MinimumCommitmentHours("//input[@id='minCommitmentHours']"), tf_OriginationDate("//input[@id='originationDateId']"), tf_LicenseStartDate("//input[@id='licenseStartDateId']"), tf_PostShipmentlicenseStart("//input[@id='postShipmentLicenseStartId']"), tf_SelectionPeriod_Days("//input[@id='selectionPeriodId']"), chk_termYearsChekBox("//input[@id='headerchechboxid1']"), ele_ddFormatSeries_Select("//ul[@unselectable='on' and contains(@id,'formatSeriesId_listbox')]//li[contains(text(),'<FormatSeries>')]"), lst_PrimaryTerritory_Formatsales("//ul[@unselectable='on' and contains(@id,'formatSalesTerritoryId_listbox')]//li[contains(text(),'<PrimaryTerritory>')]"), btn_SaveDealBtn("//button[@id='saveDealBtnId' and text()='Save Deal']"), btn_RightsBtn("//button[@id='addrightsBtnId' and text()='Rights']"), btn_NewOrderBtn("//button[@id='newOrderBtnId']"), tf_CommentArea("//textarea[@id='commentsSecondId']"), tf_ContractNumber("//span[@id='contractNumber']"), tf_ProgramTitleSearchBox("//input[@id='programTitle' and @type='text']"), btn_ProgramSearchBtn("//button[@id='programTextSearchBtn']"), chk_SelectingTheSeries("//div[@class='seariesName' and contains(,'<Programtitle>')]/preceding-sibling::span/input[@type='checkbox']"), btn_AddToCartBtn("//button[@id='addToCart']"), btn_GoToOrdersBtn("//button[@id='goToOrder']"), btn_AddToOrderBtn("//button[@id='addToOrderId']"), btn_SaveOrderBtn("//button[@id='saveOrderId']"), lnk_DealNameHyperLink("//span[@id='dealNameClickedId']"), btn_OrderHistoryBtn("//button[@id='orderHistoryBtnId' and @data-bind='click:orderHistoryClicked']"), lnk_SearchDealClick("//td[@role='gridcell' and text()='<SearchDealName>']"), ele_lblSucessVerification("//div[@id='successMessageId']");

    private String searchPath;
  
    /**
    *  Page PG_NewDealPage.
    */
    private PG_NewDealPage(final String psearchPath) {
        this.searchPath = psearchPath;
    }
    
    /**
     *  Get search path.
     * @param searchPath search path.
     */
    public final String getSearchPath() {
        return searchPath;
    }
}